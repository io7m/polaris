#
# Copyright Â© 2017 <code@io7m.com> http://io7m.com
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR
# IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

EXPECTED_TERM_NAME_UNQUALIFIED_GOT_EXPRESSION = Expected an unqualified term name but received an expression
EXPECTED_TERM_REFERENCE_GOT_EXPRESSION        = Expected a term reference but received an expression
EXPECTED_TYPE_NAME_UNQUALIFIED_GOT_EXPRESSION = Expected an unqualified type name but received an expression
EXPECTED_TYPE_REFERENCE_GOT_EXPRESSION        = Expected a type reference but received an expression
EXPECTED_EXPRESSION_BUT_GOT_DECLARATION       = Expected an expression but received a declaration
EXPECTED_KEYWORD                              = Expected a keyword

INVALID_APPLICATION           = Invalid function application
INVALID_LOCAL                 = Invalid local expression
INVALID_LAMBDA                = Invalid lambda expression
INVALID_MATCH                 = Invalid match expression
INVALID_MATCH_CASE            = Invalid match case declaration
INVALID_INTEGER               = The given expression could not be parsed as an integer
INVALID_REAL                  = The given expression could not be parsed as a real number
INVALID_TERM_NAME             = Invalid term name
INVALID_TYPE_NAME             = Invalid type name
INVALID_CONSTRUCTOR_NAME      = Invalid constructor name
INVALID_UNIT_NAME             = Invalid unit name
INVALID_VALUE                 = Invalid value declaration
INVALID_FUNCTION              = Invalid function declaration
INVALID_S_EXPRESSION          = Invalid S-expression
INVALID_CONSTRUCTOR_REFERENCE = Invalid constructor reference

INVALID_TYPE_EXPRESSION                       = Invalid type expression
INVALID_TYPE_EXPRESSION_ARROW                 = Invalid type arrow expression
INVALID_TYPE_EXPRESSION_VARIADIC              = Invalid variadic type parameter
INVALID_TYPE_EXPRESSION_UNEXPECTED_VARIADIC   = Only the last parameter of a function type is allowed to be variadic
INVALID_TYPE_EXPRESSION_FORALL                = Invalid universal quantification expression
INVALID_TYPE_EXPRESSION_FORALL_DUPLICATE_NAME = Duplicate type parameter name

INVALID_RECORD                 = Invalid record declaration
INVALID_RECORD_FIELD           = Invalid record field declaration
INVALID_RECORD_DUPLICATE_FIELD = Duplicate field name

INVALID_VARIANT                = Invalid variant declaration
INVALID_VARIANT_CASE           = Invalid variant case declaration
INVALID_VARIANT_DUPLICATE_CASE = Duplicate case name

INVALID_PATTERN = Invalid pattern
INVALID_PATTERN_EXPECTED_CONSTRUCTOR_REFERENCE = Patterns must refer to constructors
INVALID_PATTERN_EXPECTED_CONSTRUCTOR_UNQUALIIFIED_ARGUMENT_NAME = Must provide a single unqualified name as the argument to a unary constructor